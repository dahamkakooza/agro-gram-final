{"version":3,"file":"Checkout-VZ6Nrley.js","sources":["../../src/pages/Checkout.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useCart } from '../contexts/CartContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { marketplaceAPI } from '@agro-gram/api';\r\nimport { Card, Button, Input, Select, Alert, LoadingSpinner } from '@agro-gram/ui';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Checkout = () => {\r\n  const { items, getCartTotal, clearCart, setShippingInfo, shippingInfo } = useCart();\r\n  const { user, userProfile } = useAuth();\r\n  const navigate = useNavigate();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  const [formData, setFormData] = useState({\r\n    // Shipping Information\r\n    fullName: userProfile?.first_name + ' ' + userProfile?.last_name || '',\r\n    address: '',\r\n    city: '',\r\n    state: '',\r\n    zipCode: '',\r\n    country: 'United States',\r\n    phone: '',\r\n    \r\n    // Payment Information\r\n    cardNumber: '',\r\n    expiryDate: '',\r\n    cvv: '',\r\n    cardName: '',\r\n    \r\n    // Order Notes\r\n    notes: ''\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const required = ['fullName', 'address', 'city', 'state', 'zipCode', 'phone', 'cardNumber', 'expiryDate', 'cvv', 'cardName'];\r\n    for (let field of required) {\r\n      if (!formData[field]?.trim()) {\r\n        setError(`Please fill in ${field.replace(/([A-Z])/g, ' $1').toLowerCase()}`);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handlePlaceOrder = async () => {\r\n    if (!validateForm()) return;\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      // Group items by seller for multiple orders\r\n      const ordersBySeller = {};\r\n      items.forEach(item => {\r\n        if (!ordersBySeller[item.sellerId]) {\r\n          ordersBySeller[item.sellerId] = [];\r\n        }\r\n        ordersBySeller[item.sellerId].push(item);\r\n      });\r\n\r\n      // Create orders for each seller\r\n      const orderPromises = Object.entries(ordersBySeller).map(([sellerId, sellerItems]) => {\r\n        const orderData = {\r\n          seller_id: sellerId,\r\n          items: sellerItems.map(item => ({\r\n            product_id: item.productId,\r\n            quantity: item.quantity,\r\n            price: item.price\r\n          })),\r\n          shipping_address: `${formData.address}, ${formData.city}, ${formData.state} ${formData.zipCode}, ${formData.country}`,\r\n          contact_number: formData.phone,\r\n          customer_notes: formData.notes,\r\n          total_price: sellerItems.reduce((total, item) => total + (item.price * item.quantity), 0)\r\n        };\r\n\r\n        return marketplaceAPI.createOrder(orderData);\r\n      });\r\n\r\n      const results = await Promise.all(orderPromises);\r\n      \r\n      // Check if all orders were created successfully\r\n      const allSuccess = results.every(result => result.success);\r\n      \r\n      if (allSuccess) {\r\n        // Save shipping info for future orders\r\n        setShippingInfo({\r\n          fullName: formData.fullName,\r\n          address: formData.address,\r\n          city: formData.city,\r\n          state: formData.state,\r\n          zipCode: formData.zipCode,\r\n          country: formData.country,\r\n          phone: formData.phone\r\n        });\r\n\r\n        // Clear cart\r\n        clearCart();\r\n        \r\n        // Redirect to orders page with success message\r\n        navigate('/orders', { \r\n          state: { \r\n            message: 'Order placed successfully! Sellers will confirm your orders shortly.' \r\n          } \r\n        });\r\n      } else {\r\n        setError('Some orders failed to process. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Order creation error:', err);\r\n      setError('Failed to place order. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className=\"checkout-empty\">\r\n        <Card>\r\n          <div style={{ textAlign: 'center', padding: '40px' }}>\r\n            <h2>Your cart is empty</h2>\r\n            <p>Add some products to your cart before checkout</p>\r\n            <Button variant=\"primary\" onClick={() => navigate('/marketplace')}>\r\n              Continue Shopping\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkout-page\">\r\n      <h1>Checkout</h1>\r\n      \r\n      {error && <Alert type=\"error\">{error}</Alert>}\r\n\r\n      <div className=\"checkout-layout\">\r\n        <div className=\"checkout-form\">\r\n          {/* Shipping Information */}\r\n          <Card title=\"Shipping Information\">\r\n            <div className=\"form-grid\">\r\n              <Input\r\n                label=\"Full Name\"\r\n                name=\"fullName\"\r\n                value={formData.fullName}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <Input\r\n                label=\"Address\"\r\n                name=\"address\"\r\n                value={formData.address}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <Input\r\n                label=\"City\"\r\n                name=\"city\"\r\n                value={formData.city}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <Input\r\n                label=\"State\"\r\n                name=\"state\"\r\n                value={formData.state}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <Input\r\n                label=\"ZIP Code\"\r\n                name=\"zipCode\"\r\n                value={formData.zipCode}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <Input\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                value={formData.phone}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Payment Information */}\r\n          <Card title=\"Payment Information\">\r\n            <div className=\"form-grid\">\r\n              <Input\r\n                label=\"Cardholder Name\"\r\n                name=\"cardName\"\r\n                value={formData.cardName}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n              <Input\r\n                label=\"Card Number\"\r\n                name=\"cardNumber\"\r\n                value={formData.cardNumber}\r\n                onChange={handleInputChange}\r\n                placeholder=\"1234 5678 9012 3456\"\r\n                required\r\n              />\r\n              <Input\r\n                label=\"Expiry Date\"\r\n                name=\"expiryDate\"\r\n                value={formData.expiryDate}\r\n                onChange={handleInputChange}\r\n                placeholder=\"MM/YY\"\r\n                required\r\n              />\r\n              <Input\r\n                label=\"CVV\"\r\n                name=\"cvv\"\r\n                value={formData.cvv}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n          </Card>\r\n\r\n          {/* Order Notes */}\r\n          <Card title=\"Order Notes (Optional)\">\r\n            <Input\r\n              type=\"textarea\"\r\n              name=\"notes\"\r\n              value={formData.notes}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Any special instructions for the sellers...\"\r\n              rows={3}\r\n            />\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Order Summary */}\r\n        <div className=\"order-summary-sidebar\">\r\n          <Card title=\"Order Summary\">\r\n            <div className=\"order-items\">\r\n              {items.map(item => (\r\n                <div key={item.productId} className=\"order-item\">\r\n                  <div className=\"item-info\">\r\n                    <strong>{item.title}</strong>\r\n                    <span>Qty: {item.quantity}</span>\r\n                  </div>\r\n                  <div className=\"item-price\">\r\n                    ${(item.price * item.quantity).toFixed(2)}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"order-totals\">\r\n              <div className=\"total-line\">\r\n                <span>Subtotal:</span>\r\n                <span>${getCartTotal().toFixed(2)}</span>\r\n              </div>\r\n              <div className=\"total-line\">\r\n                <span>Shipping:</span>\r\n                <span>$0.00</span>\r\n              </div>\r\n              <div className=\"total-line grand-total\">\r\n                <span>Total:</span>\r\n                <span>${getCartTotal().toFixed(2)}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <Button \r\n              variant=\"success\" \r\n              size=\"large\" \r\n              loading={loading}\r\n              onClick={handlePlaceOrder}\r\n              style={{ width: '100%', marginTop: '20px' }}\r\n            >\r\n              Place Order\r\n            </Button>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;"],"names":["Checkout","items","getCartTotal","clearCart","setShippingInfo","shippingInfo","useCart","user","userProfile","useAuth","navigate","useNavigate","loading","setLoading","useState","error","setError","formData","setFormData","handleInputChange","e","validateForm","required","field","_a","handlePlaceOrder","ordersBySeller","item","orderPromises","sellerId","sellerItems","orderData","total","marketplaceAPI","result","err","jsx","Card","jsxs","Button","Alert","Input"],"mappings":"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"}