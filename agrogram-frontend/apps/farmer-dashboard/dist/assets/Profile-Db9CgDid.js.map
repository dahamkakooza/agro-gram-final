{"version":3,"file":"Profile-Db9CgDid.js","sources":["../../src/pages/Profile.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { userAPI } from '@agro-gram/api';\r\nimport { Card, Button, LoadingSpinner, Input, Select, TextArea, Tabs } from '@agro-gram/ui';\r\n\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  const { userProfile, refreshProfile } = useAuth();\r\n  const [activeTab, setActiveTab] = useState('personal');\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [activities, setActivities] = useState([]);\r\n  const [stats, setStats] = useState(null);\r\n  const [error, setError] = useState('');\r\n  \r\n  const [profileForm, setProfileForm] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    phone_number: '',\r\n    location: '',\r\n    farm_size: '',\r\n    business_name: '',\r\n    business_description: '',\r\n    latitude: '',\r\n    longitude: ''\r\n  });\r\n\r\n  const [preferencesForm, setPreferencesForm] = useState({\r\n    price_range_min: '',\r\n    price_range_max: '',\r\n    quality_preference: 'STANDARD',\r\n    preferred_locations: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (userProfile) {\r\n      initializeForms();\r\n      fetchProfileData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [userProfile]);\r\n\r\n  const initializeForms = () => {\r\n    if (userProfile) {\r\n      setProfileForm({\r\n        first_name: userProfile.first_name || '',\r\n        last_name: userProfile.last_name || '',\r\n        phone_number: userProfile.phone_number || '',\r\n        location: userProfile.location || '',\r\n        farm_size: userProfile.farm_size || '',\r\n        business_name: userProfile.business_name || '',\r\n        business_description: userProfile.business_description || '',\r\n        latitude: userProfile.latitude || '',\r\n        longitude: userProfile.longitude || ''\r\n      });\r\n\r\n      if (userProfile.preferences) {\r\n        setPreferencesForm({\r\n          price_range_min: userProfile.preferences.price_range_min || '',\r\n          price_range_max: userProfile.preferences.price_range_max || '',\r\n          quality_preference: userProfile.preferences.quality_preference || 'STANDARD',\r\n          preferred_locations: userProfile.preferences.preferred_locations || []\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Helper function for default stats\r\n  const getDefaultStats = () => ({\r\n    total_farms: 0,\r\n    total_plots: 0,\r\n    active_crops: 0,\r\n    pending_tasks: 0,\r\n    total_orders: 0,\r\n    total_revenue: 0,\r\n    profile_completion: 0,\r\n    productivity_level: 'MEDIUM',\r\n    success_rate: 0,\r\n    efficiency_score: 0\r\n  });\r\n\r\n  const fetchProfileData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      // Use individual try-catch for each API call\r\n      try {\r\n        const activitiesResponse = await userAPI.getActivities();\r\n        if (activitiesResponse.success) {\r\n          const activitiesData = activitiesResponse.data;\r\n          setActivities(\r\n            activitiesData.activities || \r\n            activitiesData.results || \r\n            activitiesData.data?.activities || \r\n            []\r\n          );\r\n        }\r\n      } catch (activitiesError) {\r\n        console.warn('Activities endpoint failed:', activitiesError);\r\n        setActivities([]);\r\n      }\r\n\r\n      try {\r\n        const statsResponse = await userAPI.getUserStats();\r\n        if (statsResponse.success) {\r\n          setStats(statsResponse.data);\r\n        } else {\r\n          setStats(getDefaultStats());\r\n        }\r\n      } catch (statsError) {\r\n        console.warn('Stats endpoint failed:', statsError);\r\n        setStats(getDefaultStats());\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Error fetching profile data:', error);\r\n      setError('Failed to load some profile data. Some features may be limited.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProfileUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Clean the data before sending\r\n      const cleanData = { ...profileForm };\r\n      Object.keys(cleanData).forEach(key => {\r\n        if (cleanData[key] === '' || cleanData[key] === null) {\r\n          delete cleanData[key];\r\n        }\r\n      });\r\n\r\n      const result = await userAPI.updateProfile(cleanData);\r\n      \r\n      if (result.success) {\r\n        await refreshProfile();\r\n        alert('Profile updated successfully!');\r\n      } else {\r\n        setError(result.message || 'Failed to update profile. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n      setError('Failed to update profile. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  const handlePreferencesUpdate = async (e) => {\r\n    e.preventDefault();\r\n    setSaving(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // FIXED: Ensure we're sending proper primitive values, not React elements\r\n      const cleanPreferences = {\r\n        price_range_min: preferencesForm.price_range_min ? parseFloat(preferencesForm.price_range_min) : null,\r\n        price_range_max: preferencesForm.price_range_max ? parseFloat(preferencesForm.price_range_max) : null,\r\n        quality_preference: preferencesForm.quality_preference || 'STANDARD',\r\n        preferred_locations: Array.isArray(preferencesForm.preferred_locations) \r\n          ? preferencesForm.preferred_locations \r\n          : []\r\n      };\r\n\r\n      console.log('üì¶ Sending preferences:', cleanPreferences);\r\n\r\n      const result = await userAPI.updateUserPreferences(cleanPreferences);\r\n      \r\n      if (result.success) {\r\n        alert('Preferences updated successfully!');\r\n      } else {\r\n        setError(result.message || 'Failed to update preferences. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating preferences:', error);\r\n      setError('Failed to update preferences. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpinner size=\"large\" />\r\n        <p>Loading profile...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!userProfile) {\r\n    return (\r\n      <div className=\"profile-error\">\r\n        <Card>\r\n          <div className=\"error-content\">\r\n            <h2>Profile Not Found</h2>\r\n            <p>Unable to load your profile. Please try refreshing the page or contact support.</p>\r\n            <Button onClick={() => window.location.reload()}>\r\n              Refresh Page\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const profileCompletion = stats?.profile_completion || 0;\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile__header\">\r\n        <div className=\"profile__info\">\r\n          <h1>Profile Settings</h1>\r\n          <div className=\"profile-stats\">\r\n            <span className=\"completion-badge\">\r\n              Profile {Math.round(profileCompletion)}% Complete\r\n            </span>\r\n            <span className=\"verification-badge\">\r\n              {userProfile.is_verified ? '‚úÖ Verified' : '‚è≥ Pending Verification'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"profile__error\">\r\n          <Card className=\"error-card\">\r\n            <p>{error}</p>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      <Tabs\r\n        tabs={[\r\n          { id: 'personal', label: 'Personal Info' },\r\n          { id: 'preferences', label: 'Preferences' },\r\n          { id: 'activity', label: 'Activity' },\r\n          { id: 'stats', label: 'Statistics' }\r\n        ]}\r\n        activeTab={activeTab}\r\n        onChange={setActiveTab}\r\n      />\r\n\r\n      <div className=\"profile__content\">\r\n        {activeTab === 'personal' && (\r\n          <div className=\"personal-info\">\r\n            <Card title=\"Personal Information\">\r\n              <form onSubmit={handleProfileUpdate} className=\"profile-form\">\r\n                <div className=\"form-grid\">\r\n                  <Input\r\n                    label=\"First Name\"\r\n                    value={profileForm.first_name}\r\n                    onChange={(e) => setProfileForm(prev => ({ ...prev, first_name: e.target.value }))}\r\n                    required\r\n                  />\r\n                  <Input\r\n                    label=\"Last Name\"\r\n                    value={profileForm.last_name}\r\n                    onChange={(e) => setProfileForm(prev => ({ ...prev, last_name: e.target.value }))}\r\n                    required\r\n                  />\r\n                  <Input\r\n                    label=\"Phone Number\"\r\n                    value={profileForm.phone_number}\r\n                    onChange={(e) => setProfileForm(prev => ({ ...prev, phone_number: e.target.value }))}\r\n                  />\r\n                  <Input\r\n                    label=\"Location\"\r\n                    value={profileForm.location}\r\n                    onChange={(e) => setProfileForm(prev => ({ ...prev, location: e.target.value }))}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <h4>Farm Information</h4>\r\n                  <div className=\"form-grid\">\r\n                    <Input\r\n                      label=\"Farm Size (acres)\"\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={profileForm.farm_size}\r\n                      onChange={(e) => setProfileForm(prev => ({ ...prev, farm_size: e.target.value }))}\r\n                    />\r\n                    <Input\r\n                      label=\"Business Name\"\r\n                      value={profileForm.business_name}\r\n                      onChange={(e) => setProfileForm(prev => ({ ...prev, business_name: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                  <TextArea\r\n                    label=\"Business Description\"\r\n                    value={profileForm.business_description}\r\n                    onChange={(e) => setProfileForm(prev => ({ ...prev, business_description: e.target.value }))}\r\n                    rows={3}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <h4>Location Coordinates (Optional)</h4>\r\n                  <div className=\"form-grid\">\r\n                    <Input\r\n                      label=\"Latitude\"\r\n                      type=\"number\"\r\n                      step=\"0.000001\"\r\n                      value={profileForm.latitude}\r\n                      onChange={(e) => setProfileForm(prev => ({ ...prev, latitude: e.target.value }))}\r\n                    />\r\n                    <Input\r\n                      label=\"Longitude\"\r\n                      type=\"number\"\r\n                      step=\"0.000001\"\r\n                      value={profileForm.longitude}\r\n                      onChange={(e) => setProfileForm(prev => ({ ...prev, longitude: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <Button type=\"submit\" variant=\"primary\" loading={saving}>\r\n                    Update Profile\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </Card>\r\n\r\n            <Card title=\"Account Information\">\r\n              <div className=\"account-info\">\r\n                <div className=\"info-item\">\r\n                  <label>Email:</label>\r\n                  <span>{userProfile.email || 'Not set'}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <label>Role:</label>\r\n                  <span className=\"role-badge\">{userProfile.role || 'Not set'}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <label>Member Since:</label>\r\n                  <span>{userProfile.created_at ? new Date(userProfile.created_at).toLocaleDateString() : 'N/A'}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <label>Last Activity:</label>\r\n                  <span>{userProfile.last_activity ? new Date(userProfile.last_activity).toLocaleString() : 'N/A'}</span>\r\n                </div>\r\n                <div className=\"info-item\">\r\n                  <label>Login Count:</label>\r\n                  <span>{userProfile.login_count || 0}</span>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'preferences' && (\r\n          <div className=\"preferences\">\r\n            <Card title=\"Marketplace Preferences\">\r\n              <form onSubmit={handlePreferencesUpdate} className=\"preferences-form\">\r\n                <div className=\"form-section\">\r\n                  <h4>Price Range Preferences</h4>\r\n                  <div className=\"form-grid\">\r\n                    <Input\r\n                      label=\"Minimum Price\"\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={preferencesForm.price_range_min}\r\n                      onChange={(e) => setPreferencesForm(prev => ({ ...prev, price_range_min: e.target.value }))}\r\n                    />\r\n                    <Input\r\n                      label=\"Maximum Price\"\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={preferencesForm.price_range_max}\r\n                      onChange={(e) => setPreferencesForm(prev => ({ ...prev, price_range_max: e.target.value }))}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-section\">\r\n                  <h4>Quality Preferences</h4>\r\n                  <Select\r\n                    label=\"Preferred Quality Grade\"\r\n                    options={[\r\n                      { value: 'PREMIUM', label: 'Premium' },\r\n                      { value: 'STANDARD', label: 'Standard' },\r\n                      { value: 'ECONOMY', label: 'Economy' }\r\n                    ]}\r\n                    value={preferencesForm.quality_preference}\r\n                    onChange={(value) => {\r\n                      // Ensure value is a string, not a React element\r\n                      if (typeof value === 'string') {\r\n                        setPreferencesForm(prev => ({ ...prev, quality_preference: value }));\r\n                      } else if (value && value.target) {\r\n                        // Handle DOM event\r\n                        setPreferencesForm(prev => ({ ...prev, quality_preference: value.target.value }));\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-actions\">\r\n                  <Button type=\"submit\" variant=\"primary\" loading={saving}>\r\n                    Save Preferences\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </Card>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'activity' && (\r\n          <div className=\"activity\">\r\n            <Card title=\"Recent Activity\">\r\n              {activities.length > 0 ? (\r\n                <div className=\"activity-list\">\r\n                  {activities.map(activity => (\r\n                    <div key={activity.id} className=\"activity-item\">\r\n                      <div className=\"activity-icon\">\r\n                        {activity.activity_type === 'LOGIN' && 'üîê'}\r\n                        {activity.activity_type === 'LOGOUT' && 'üö™'}\r\n                        {activity.activity_type === 'PROFILE_UPDATE' && 'üë§'}\r\n                        {!['LOGIN', 'LOGOUT', 'PROFILE_UPDATE'].includes(activity.activity_type) && 'üìù'}\r\n                      </div>\r\n                      <div className=\"activity-content\">\r\n                        <p>{activity.description || `Activity: ${activity.activity_type}`}</p>\r\n                        <small>\r\n                          {activity.created_at ? new Date(activity.created_at).toLocaleString() : 'Unknown date'}\r\n                          {activity.ip_address && ` ‚Ä¢ IP: ${activity.ip_address}`}\r\n                        </small>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"no-activity\">\r\n                  <p>No recent activity found</p>\r\n                </div>\r\n              )}\r\n            </Card>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'stats' && stats && (\r\n          <div className=\"statistics\">\r\n            <div className=\"stats-grid\">\r\n              <Card title=\"Farm Statistics\">\r\n                <div className=\"stats-list\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">{stats.total_farms || 0}</span>\r\n                    <span className=\"stat-label\">Total Farms</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">{stats.total_plots || 0}</span>\r\n                    <span className=\"stat-label\">Total Plots</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">{stats.active_crops || 0}</span>\r\n                    <span className=\"stat-label\">Active Crops</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">{stats.pending_tasks || 0}</span>\r\n                    <span className=\"stat-label\">Pending Tasks</span>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n\r\n              <Card title=\"Business Statistics\">\r\n                <div className=\"stats-list\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">{stats.total_orders || 0}</span>\r\n                    <span className=\"stat-label\">Total Orders</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">${stats.total_revenue || 0}</span>\r\n                    <span className=\"stat-label\">Total Revenue</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-value\">{Math.round(stats.profile_completion || 0)}%</span>\r\n                    <span className=\"stat-label\">Profile Complete</span>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            </div>\r\n\r\n            {(userProfile.role === 'FARMER' || !userProfile.role) && (\r\n              <Card title=\"Performance Metrics\">\r\n                <div className=\"performance-metrics\">\r\n                  <div className=\"metric\">\r\n                    <label>Productivity Level</label>\r\n                    <span className={`metric-value productivity-${(stats.productivity_level?.toLowerCase() || 'medium')}`}>\r\n                      {stats.productivity_level || 'Medium'}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"metric\">\r\n                    <label>Success Rate</label>\r\n                    <span className=\"metric-value\">\r\n                      {stats.success_rate ? `${(stats.success_rate * 100).toFixed(1)}%` : 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"metric\">\r\n                    <label>Resource Efficiency</label>\r\n                    <span className=\"metric-value\">\r\n                      {stats.efficiency_score ? `${(stats.efficiency_score * 100).toFixed(1)}%` : 'N/A'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </Card>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"names":["Profile","userProfile","refreshProfile","useAuth","activeTab","setActiveTab","useState","loading","setLoading","saving","setSaving","activities","setActivities","stats","setStats","error","setError","profileForm","setProfileForm","preferencesForm","setPreferencesForm","useEffect","initializeForms","fetchProfileData","getDefaultStats","activitiesResponse","userAPI","activitiesData","_a","activitiesError","statsResponse","statsError","handleProfileUpdate","e","cleanData","key","result","handlePreferencesUpdate","cleanPreferences","jsxs","jsx","LoadingSpinner","Card","Button","profileCompletion","Tabs","Input","prev","TextArea","Select","value","activity"],"mappings":"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"}