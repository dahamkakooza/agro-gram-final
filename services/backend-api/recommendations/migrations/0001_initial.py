# Generated by Django 5.2.6 on 2025-10-02 11:20

import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CropRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_parameters', models.JSONField(default=dict, help_text='Soil and weather parameters used for recommendation')),
                ('recommendations', models.JSONField(default=list, help_text='List of recommended crops with confidence scores')),
                ('selected_crop', models.CharField(blank=True, max_length=100, null=True)),
                ('confidence_score', models.FloatField(help_text='Confidence score of the top recommendation', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('season', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Crop Recommendation',
                'verbose_name_plural': 'Crop Recommendations',
                'db_table': 'crop_recommendations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('model_type', models.CharField(choices=[('crop_recommendation', 'Crop Recommendation'), ('price_prediction', 'Price Prediction'), ('disease_detection', 'Disease Detection')], max_length=50)),
                ('accuracy', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('precision', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('recall', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('f1_score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('training_data_size', models.IntegerField(default=0)),
                ('training_duration_seconds', models.IntegerField(default=0)),
                ('feature_importance', models.JSONField(blank=True, default=dict)),
                ('model_version', models.CharField(default='1.0.0', max_length=20)),
                ('is_production', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Model Performance',
                'verbose_name_plural': 'Model Performance',
                'db_table': 'model_performance',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('actual_crop_planted', models.CharField(max_length=100)),
                ('yield_rating', models.IntegerField(choices=[(1, 'Very Poor (＜25% of expected)'), (2, 'Poor (25-50% of expected)'), (3, 'Fair (50-75% of expected)'), (4, 'Good (75-100% of expected)'), (5, 'Excellent (＞100% of expected)')])),
                ('actual_yield', models.DecimalField(blank=True, decimal_places=2, help_text='Actual yield in kg/hectare', max_digits=10, null=True)),
                ('success_notes', models.TextField(blank=True, help_text='What worked well')),
                ('challenges_faced', models.TextField(blank=True, help_text='Challenges encountered')),
                ('improvements_suggested', models.TextField(blank=True, help_text='Suggestions for better recommendations')),
                ('actual_rainfall', models.DecimalField(blank=True, decimal_places=2, help_text='Actual rainfall during growing season (mm)', max_digits=8, null=True)),
                ('pest_problems', models.BooleanField(default=False)),
                ('disease_issues', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Feedback',
                'verbose_name_plural': 'User Feedback',
                'db_table': 'user_feedback',
                'ordering': ['-created_at'],
            },
        ),
    ]
