# Generated by Django 5.2.6 on 2025-10-08 23:57

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MarketplaceAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_products', models.PositiveIntegerField(default=0)),
                ('active_products', models.PositiveIntegerField(default=0)),
                ('new_products_today', models.PositiveIntegerField(default=0)),
                ('products_sold_today', models.PositiveIntegerField(default=0)),
                ('total_orders', models.PositiveIntegerField(default=0)),
                ('pending_orders', models.PositiveIntegerField(default=0)),
                ('completed_orders', models.PositiveIntegerField(default=0)),
                ('cancelled_orders', models.PositiveIntegerField(default=0)),
                ('daily_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('new_users_today', models.PositiveIntegerField(default=0)),
                ('total_searches', models.PositiveIntegerField(default=0)),
                ('successful_searches', models.PositiveIntegerField(default=0)),
                ('category_distribution', models.JSONField(blank=True, default=dict)),
                ('average_product_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('price_trend_data', models.JSONField(blank=True, default=dict)),
                ('demand_insights', models.JSONField(blank=True, default=dict)),
                ('market_trends', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Marketplace Analytics',
                'verbose_name_plural': 'Marketplace Analytics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='marketplace_date_ec9288_idx')],
            },
        ),
        migrations.CreateModel(
            name='PricePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crop_type', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('predicted_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('confidence', models.FloatField(default=0.0, help_text='Prediction confidence score (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('prediction_period', models.CharField(choices=[('1_WEEK', '1 Week'), ('1_MONTH', '1 Month'), ('3_MONTHS', '3 Months'), ('6_MONTHS', '6 Months'), ('1_YEAR', '1 Year')], default='1_MONTH', max_length=20)),
                ('trend', models.CharField(choices=[('UP', 'Up'), ('DOWN', 'Down'), ('STABLE', 'Stable'), ('VOLATILE', 'Volatile')], default='STABLE', max_length=20)),
                ('price_change_percentage', models.FloatField(default=0.0)),
                ('min_predicted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_predicted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('data_sources', models.JSONField(blank=True, default=list)),
                ('algorithm_version', models.CharField(default='1.0', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('market_factors', models.JSONField(blank=True, default=dict, help_text='Factors influencing the prediction')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Price Prediction',
                'verbose_name_plural': 'Price Predictions',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['crop_type', 'region'], name='marketplace_crop_ty_11e401_idx'), models.Index(fields=['created_at'], name='marketplace_created_c92f7e_idx'), models.Index(fields=['confidence'], name='marketplace_confide_9bc8b5_idx')],
                'unique_together': {('crop_type', 'region', 'prediction_period', 'created_at')},
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('keywords', models.JSONField(blank=True, default=list, help_text='Search keywords for this category')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='marketplace_name_6ba2fd_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('unit', models.CharField(choices=[('KG', 'Kilogram'), ('LB', 'Pound'), ('TON', 'Ton'), ('SACK', 'Sack'), ('PIECE', 'Piece'), ('BUNCH', 'Bunch'), ('CRATE', 'Crate'), ('BAG', 'Bag')], default='KG', max_length=20)),
                ('image', models.ImageField(blank=True, help_text='Product image', null=True, upload_to='products/%Y/%m/%d/')),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('SOLD', 'Sold'), ('EXPIRED', 'Expired'), ('PENDING', 'Pending Review')], default='AVAILABLE', max_length=20)),
                ('quality_grade', models.CharField(choices=[('PREMIUM', 'Premium'), ('STANDARD', 'Standard'), ('ECONOMY', 'Economy'), ('ORGANIC', 'Organic')], default='STANDARD', max_length=20)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Geographic latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Geographic longitude', max_digits=9, null=True)),
                ('demand_score', models.FloatField(default=0.5, help_text='AI-calculated demand score (0.0 to 1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('price_trend', models.FloatField(default=0.0, help_text='Price trend percentage (positive=up, negative=down)')),
                ('search_keywords', models.JSONField(blank=True, default=list, help_text='Auto-generated search keywords')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When the listing automatically expires', null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='marketplace.productcategory')),
                ('farmer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Listing',
                'verbose_name_plural': 'Product Listings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('PROCESSING', 'Processing'), ('SHIPPED', 'Shipped'), ('DELIVERED', 'Delivered'), ('CANCELLED', 'Cancelled'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_address', models.TextField()),
                ('contact_number', models.CharField(default='Unknown', help_text='Customer contact number', max_length=20)),
                ('shipping_notes', models.TextField(blank=True, null=True)),
                ('payment_method', models.CharField(default='Cash on Delivery', max_length=50)),
                ('payment_status', models.CharField(choices=[('PENDING', 'Pending'), ('PAID', 'Paid'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('shipped_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='marketplace.productlisting')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductViewHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_count', models.PositiveIntegerField(default=1)),
                ('last_viewed', models.DateTimeField(auto_now=True)),
                ('first_viewed', models.DateTimeField(auto_now_add=True)),
                ('time_spent', models.FloatField(default=0.0, help_text='Time spent viewing product in seconds')),
                ('engagement_score', models.FloatField(default=0.0, help_text='Calculated engagement score', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_history', to='marketplace.productlisting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product View History',
                'verbose_name_plural': 'Product View Histories',
                'ordering': ['-last_viewed'],
            },
        ),
        migrations.CreateModel(
            name='SearchQueryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('results_count', models.PositiveIntegerField(default=0)),
                ('filters_applied', models.JSONField(blank=True, default=dict)),
                ('search_duration', models.FloatField(default=0.0, help_text='Search duration in seconds')),
                ('is_successful', models.BooleanField(default=True)),
                ('click_count', models.PositiveIntegerField(default=0, help_text='Number of times results from this search were clicked')),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='search_queries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Search Query Log',
                'verbose_name_plural': 'Search Query Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SearchSuggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=255)),
                ('suggestion_type', models.CharField(choices=[('CATEGORY', 'Category'), ('PRODUCT', 'Product'), ('TRENDING', 'Trending'), ('POPULAR', 'Popular'), ('RECENT', 'Recent'), ('RELATED', 'Related')], default='POPULAR', max_length=20)),
                ('relevance_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('search_count', models.PositiveIntegerField(default=0)),
                ('click_count', models.PositiveIntegerField(default=0)),
                ('conversion_rate', models.FloatField(default=0.0)),
                ('is_active', models.BooleanField(default=True)),
                ('related_products_count', models.PositiveIntegerField(default=0)),
                ('generated_by_ai', models.BooleanField(default=True)),
                ('ai_model_version', models.CharField(default='1.0', max_length=50)),
                ('last_searched', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='marketplace.productcategory')),
            ],
            options={
                'verbose_name': 'Search Suggestion',
                'verbose_name_plural': 'Search Suggestions',
                'ordering': ['-relevance_score', '-search_count'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('task_type', models.CharField(choices=[('PLANTING', 'Planting'), ('HARVESTING', 'Harvesting'), ('IRRIGATION', 'Irrigation'), ('FERTILIZATION', 'Fertilization'), ('PEST_CONTROL', 'Pest Control'), ('WEEDING', 'Weeding'), ('PRUNING', 'Pruning'), ('MAINTENANCE', 'Maintenance'), ('MARKETING', 'Marketing'), ('INVENTORY', 'Inventory Management'), ('EQUIPMENT', 'Equipment Maintenance'), ('OTHER', 'Other')], default='OTHER', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('ON_HOLD', 'On Hold')], default='PENDING', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=20)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_hours', models.PositiveIntegerField(default=1, help_text='Estimated hours to complete', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)])),
                ('actual_hours', models.PositiveIntegerField(blank=True, help_text='Actual hours spent', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='task_attachments/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subtasks', to='marketplace.task')),
                ('related_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_tasks', to='marketplace.productlisting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_time', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('reminder_type', models.CharField(choices=[('EMAIL', 'Email'), ('PUSH', 'Push Notification'), ('BOTH', 'Both')], default='EMAIL', max_length=20)),
                ('reminder_frequency', models.CharField(choices=[('ONCE', 'Once'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly')], default='ONCE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reminder', to='marketplace.task')),
            ],
            options={
                'verbose_name': 'Task Reminder',
                'verbose_name_plural': 'Task Reminders',
                'ordering': ['reminder_time'],
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('SEARCH', 'Search'), ('VIEW_PRODUCT', 'View Product'), ('CREATE_PRODUCT', 'Create Product'), ('UPDATE_PRODUCT', 'Update Product'), ('CREATE_ORDER', 'Create Order'), ('UPDATE_ORDER', 'Update Order'), ('CREATE_TASK', 'Create Task'), ('COMPLETE_TASK', 'Complete Task'), ('PRICE_PREDICTION', 'Price Prediction'), ('UPDATE_PREFERENCES', 'Update Preferences')], max_length=50)),
                ('description', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity Log',
                'verbose_name_plural': 'User Activity Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality_preference', models.CharField(blank=True, choices=[('PREMIUM', 'Premium'), ('STANDARD', 'Standard'), ('ECONOMY', 'Economy'), ('ORGANIC', 'Organic')], max_length=20, null=True)),
                ('price_range_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('price_range_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('preferred_location', models.CharField(blank=True, max_length=200, null=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('price_alert_notifications', models.BooleanField(default=True)),
                ('task_reminder_notifications', models.BooleanField(default=True)),
                ('market_insight_notifications', models.BooleanField(default=True)),
                ('search_history_enabled', models.BooleanField(default=True)),
                ('personalized_recommendations', models.BooleanField(default=True)),
                ('data_sharing_enabled', models.BooleanField(default=False)),
                ('preferred_theme', models.CharField(choices=[('LIGHT', 'Light'), ('DARK', 'Dark'), ('AUTO', 'Auto')], default='AUTO', max_length=20)),
                ('language_preference', models.CharField(default='en', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_categories', models.ManyToManyField(blank=True, related_name='preferred_by_users', to='marketplace.productcategory')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
            },
        ),
        migrations.AddIndex(
            model_name='productlisting',
            index=models.Index(fields=['status', 'created_at'], name='marketplace_status_113d93_idx'),
        ),
        migrations.AddIndex(
            model_name='productlisting',
            index=models.Index(fields=['category', 'status'], name='marketplace_categor_ba2204_idx'),
        ),
        migrations.AddIndex(
            model_name='productlisting',
            index=models.Index(fields=['price'], name='marketplace_price_e18772_idx'),
        ),
        migrations.AddIndex(
            model_name='productlisting',
            index=models.Index(fields=['demand_score'], name='marketplace_demand__bcd07e_idx'),
        ),
        migrations.AddIndex(
            model_name='productlisting',
            index=models.Index(fields=['location'], name='marketplace_locatio_4413dd_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer', 'created_at'], name='marketplace_custome_804fa2_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status', 'created_at'], name='marketplace_status_20daae_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='marketplace_payment_71a995_idx'),
        ),
        migrations.AddIndex(
            model_name='productviewhistory',
            index=models.Index(fields=['user', 'last_viewed'], name='marketplace_user_id_552c7d_idx'),
        ),
        migrations.AddIndex(
            model_name='productviewhistory',
            index=models.Index(fields=['product', 'view_count'], name='marketplace_product_86a404_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productviewhistory',
            unique_together={('user', 'product')},
        ),
        migrations.AddIndex(
            model_name='searchquerylog',
            index=models.Index(fields=['user', 'created_at'], name='marketplace_user_id_d37404_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquerylog',
            index=models.Index(fields=['query'], name='marketplace_query_ed1efc_idx'),
        ),
        migrations.AddIndex(
            model_name='searchquerylog',
            index=models.Index(fields=['created_at'], name='marketplace_created_ab956c_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsuggestion',
            index=models.Index(fields=['query', 'suggestion_type'], name='marketplace_query_4688b1_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsuggestion',
            index=models.Index(fields=['relevance_score'], name='marketplace_relevan_fb5b18_idx'),
        ),
        migrations.AddIndex(
            model_name='searchsuggestion',
            index=models.Index(fields=['search_count'], name='marketplace_search__dc667b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='searchsuggestion',
            unique_together={('query', 'suggestion_type')},
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'status'], name='marketplace_user_id_9ab1e1_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['due_date', 'priority'], name='marketplace_due_dat_f1c8a4_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['task_type', 'status'], name='marketplace_task_ty_07ffd6_idx'),
        ),
        migrations.AddIndex(
            model_name='taskreminder',
            index=models.Index(fields=['reminder_time', 'is_sent'], name='marketplace_reminde_657dc9_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['user', 'created_at'], name='marketplace_user_id_2b50bd_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['activity_type', 'created_at'], name='marketplace_activit_019c9a_idx'),
        ),
        migrations.AddIndex(
            model_name='userpreference',
            index=models.Index(fields=['user'], name='marketplace_user_id_098e45_idx'),
        ),
    ]
